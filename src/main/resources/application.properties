
#server
server.port=8484

#local database
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@erp64.iptime.org:1521:xe
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:soony
spring.datasource.driver-class-name= net.sf.log4jdbc.sql.jdbcapi.DriverSpy

spring.datasource.username=logi753
spring.datasource.password=logi753


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#jpa
spring.jpa.hibernate.ddl-auto= create

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.flushMode = COMMIT


spring.security.oauth2.client.registration.google.client-id=383310484853-6cjdkidk3bcdkbe9oocqsv789q4kqb0h.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.naver.client-id=gncIPiBPE57sbOgvFTXL
spring.security.oauth2.client.registration.naver.client-secret=pJLA8F6JEe
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8484/login/oauth2/code/naver
#??? ?? URL ?? URL? ???? ??? ??? ?? ??
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# ?? ?? ?? ??
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# ?? ??? ???? ??? API?? ??? ?? ??
spring.security.oauth2.client.provider.naver.jwtUser-info-uri=https://openapi.naver.com/v1/nid/me
#?? ??? json?? ??? response?? ? ??? ???? ????
spring.security.oauth2.client.provider.naver.jwtUser-name-attribute=response
